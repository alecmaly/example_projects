[{"elements": [{"type": "function", "name": "constructor", "source_mapping": {"filename_relative": "Program.cs", "filename_absolute": "/home/ubuntu/example_projects/csharp/Program.cs", "filename_short": "Program.cs", "lines": [67], "starting_column": 1, "ending_column": 1}}], "description": "Program.cs.RecursiveFunctionAsync |  | 0067: if (n <= 0) return; | ", "id": "5270f605-a81b-47e7-985d-daa8ce033b9b", "first_markdown_element": "Program.cs#L67", "check": "grep-if statements", "impact": "Informational", "confidence": "Low"}, {"elements": [{"type": "function", "name": "constructor", "source_mapping": {"filename_relative": "Class1.cs", "filename_absolute": "/home/ubuntu/example_projects/csharp/Class1.cs", "filename_short": "Class1.cs", "lines": [41], "starting_column": 1, "ending_column": 1}}], "description": "Class1.cs.GenerateSequence |  | 0041: for (int i = 0; i < count; i++) | ", "id": "38da99df-3599-48b3-8f7c-118dd3a53d3f", "first_markdown_element": "Class1.cs#L41", "check": "grep-loops", "impact": "Informational", "confidence": "Low"}, {"elements": [{"type": "function", "name": "constructor", "source_mapping": {"filename_relative": "Program.cs", "filename_absolute": "/home/ubuntu/example_projects/csharp/Program.cs", "filename_short": "Program.cs", "lines": [75], "starting_column": 1, "ending_column": 1}}], "description": "Program.cs.GenerateSequenceAsync |  | 0075: for (int i = 0; i < 5; i++) | ", "id": "be24550c-3257-4d26-b587-c589ed3bc434", "first_markdown_element": "Program.cs#L75", "check": "grep-loops", "impact": "Informational", "confidence": "Low"}]